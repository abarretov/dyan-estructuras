.project {
  @extend %wrapper;
  background-color: $pure-white;
  overflow: hidden;
  @include respond-to(small) {
    height: 100vh; // fallback for browsers that do not support Custom Properties
  	height: calc(var(--vh, 1vh) * 100);
    &--cover {
      height: auto;
    }
  }
  @include respond-to(large) {
    height: calc(100vh - 30px); // fallback for browsers that do not support Custom Properties
  	height: calc(calc(var(--vh, 1vh) * 100) - 30px);
  }
  @include respond-to(extra-large) {
    max-height: 738px;
  }
  &__wrapper {
    @extend %wrapper;
    @include respond-to(large) {
      top: 0;
      bottom: unset;
      height: 100%;
    }
    &::before {
      position: absolute;
      content: '';
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: $secondary;
      @include respond-to(large) {
        background-color: transparent;
      }
    }
  }
  &__container {
    @extend %container;
  }
  &__carousel, &__content {
    position: relative;
    @include respond-to(large) {
      z-index: 1;
      position: absolute;
    }
  }
  &__carousel {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    width: 100%;
    height: 100%;
    @include respond-to(small) {
      height: calc(100vh - 370px); // fallback for browsers that do not support Custom Properties
      height: calc(calc(var(--vh, 1vh) * 100) - 370px);
      &--cover {
        height: 100vh; // fallback for browsers that do not support Custom Properties
        height: calc(var(--vh, 1vh) * 100);
      }
    }
    @include respond-to(large) {
      width: calc(100% - calc(calc(100% - 1120px) / 2) - calc(1120px * 3 / 12));
      height: 100%;
    }
    @include respond-to(huge) {
      // margin-left: calc(100% - calc(calc(100% - 1120px) / 2) - 1120px);
      width: calc(100% - calc(calc(100% - 1120px) / 2) - calc(1120px * 3 / 12));
      // width: calc(1120px - calc(1120px * 3 / 12));
		}
  }
  &__content {
    border-top: 1px solid $primary;
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    padding: 40px 40px 20px;
    width: 100%;
    color: $white;
    @include respond-to(small) {
      bottom: 0;
      padding: 0 40px;
      height: 370px;
      &--cover {
        padding: 60px 40px;
        height: auto;
      }
    }
    @include respond-to(large) {
      border-top: none;
      bottom: unset;
      left: unset;
      margin-top: 0;
      margin-left: calc(100% * 9 / 12);
      padding: 70px 40px 0;
      padding-right: 0;
      justify-content: flex-start;
      width: calc(100% * 3 / 12);
      height: 100%;
      &--center {
        justify-content: center;
      }
    }
    &::before {
      z-index: -1;
      content: '';
      position: absolute;
      top: 0;
      left: 0; // prevents expansion of the element to the left
      background-color: $secondary;
      width: 100%;
      height: 100%;
      @include respond-to(small) {
        background-color: $secondary-transparent;
      }
      @include respond-to(large) {
        width: calc(100% + calc(calc(100vw - 1120px) / 2)); // expand element width to the border
      }
    }
  }
  &__title {
    margin-bottom: 5px;
    font-size: 28px;
    font-weight: 500;
    line-height: 1.2;
    // @include respond-to(small) {
    //   font-size: 36px;
    // }
    &--normal-margin {
      margin-bottom: 20px;
    }
  }
  &__location {
    display: flex;
    margin-bottom: 20px;
    font-size: 16px;    
    line-height: 1.2;
    letter-spacing: 1px;
    &::before {
      content: url('../assets/images/icons/contact/map-marker.svg');
      margin-right: 10px;
    }
  }
  &__subtitle {
    margin-bottom: 20px;
    font-weight: 500;
    line-height: 1.2;
    // @include respond-to(small) {
    //   font-size: 28px;
    // }
  }
  &__list {
    list-style-type: square;
    margin-left: 20px;
    margin-bottom: 20px;
    & li {
      margin-bottom: 10px;
      &::marker {
        color: $primary;
      }
    }
  }
  &__text {
    font-weight: 300;
    line-height: 1.2;
    margin-bottom: 20px;
    @include respond-to(large) {
    }
  }
  &__cta {
    & .button {
      width: 180px;
    }
  }
  &__buttons {
    position: absolute;
    left: 0;
    bottom: calc(calc(var(--vh, 1vh) * -100) / 2); // prevents the viewport bug on mobile
    width: 100%;
    display: flex;
    justify-content: space-between;
    @include respond-to(small) {
      bottom: calc(calc(var(--vh, 1vh) * 100) / 2);
    }
    @include respond-to(large) {
      position: relative;
      bottom: unset;
      left: unset;
      justify-content: flex-start;
    }
  }
}