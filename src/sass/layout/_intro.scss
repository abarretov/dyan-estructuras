.intro {
  @extend %wrapper;
  margin-top: 450px;
  height: 100vh; // fallback for browsers that do not support Custom Properties
  height: calc(var(--vh, 1vh) * 100);
  @include respond-to(small) {
    margin-top: unset;
  }
  @include respond-to(large) {
    height: 600px;
    max-height: 768px;
  }
  &__wrapper {
    @extend %wrapper;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  &__container {
    @extend %container;
  }
  &__features, &__content {
    z-index: 1;
    position: absolute;
  }
  &__features {
    display: none;
    @include respond-to(large) {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      width: calc(100% * 9 / 12);
      height: 112px;
    }
    &::before {
      z-index: -1;
      content: '';
      position: absolute;
      top: 0;
      right: 0; // prevents expansion of the element to the right
      width: 100%;
      height: 100%;
      background-color: $black-transparent;
      @include respond-to(large) {
        width: 300%; // expand element width beyond border
      }
    }
  }
  &__content {
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    padding-right: 40px;
    padding-left: 40px;
    top: -450px;
    width: 100%;
    height: 520px;
    color: $white;
    @include respond-to(small) {
      top: unset;
      bottom: 0;
      left: -30px;
      width: 100vw; // fallback for browsers that do not support Custom Properties
      width: calc(var(--vw, 1vw) * 100);
      height: 300px;
    }
    @include respond-to(large) {
      bottom: unset;
      left: unset;
      margin-left: calc(100% * 9 / 12);
      padding-right: 0;
      width: calc(100% * 3 / 12);
      height: 100%;
    }
    &::before {
      z-index: -1;
      content: '';
      position: absolute;
      top: 0;
      left: 0; // prevents expansion of the element to the left
      background-color: $secondary;
      width: 100%;
      height: 100%;
      @include respond-to(small) {
        background-color: $secondary-transparent;
      }
      @include respond-to(large) {
        width: calc(100% + calc(calc(100vw - 1120px) / 2)); // expand element width to the border
        width: calc(100% + calc(calc(calc(var(--vw, 1vw) * 100) - 1120px) / 2));
      }
    }
  }
  &__title {
    margin-bottom: 20px;
    font-size: 40px;
    font-weight: 500;
    line-height: 1.2;
  }
  &__text {
    font-weight: 300;
    line-height: 1.2;
    margin-bottom: 20px;
  }
  &__cta {
    z-index: 1;
    & .button {
      width: 180px;
    }
    @include respond-to(large) {
      position: absolute;
      bottom: 100px;
    }
  }
  &__buttons {
    position: absolute;
    left: 0;
    bottom: calc(calc(100vh * -1) / 2); // fallback for browsers that do not support Custom Properties
    bottom: calc(calc(var(--vh, 1vh) * -100) / 2);
    width: 100%;
    display: flex;
    justify-content: space-between;    
    @include respond-to(small) {
      bottom: calc(100vh / 2); // fallback for browsers that do not support Custom Properties
      bottom: calc(calc(var(--vh, 1vh) * 100) / 2);
    }
    @include respond-to(large) {
      position: relative;
      bottom: unset;
      left: unset;
      justify-content: flex-start;
    }
  }
}